name: Sonarcloud
on:
  push:
    branches:
      - main
jobs:
  unit-tests:
    name: Criterion Unit Tests
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: 'true'
          fetch-depth: 0

      - name: Install/Cache apt packages
        uses: awalsh128/cache-apt-pkgs-action@v1.1.2
        with:
          packages: ninja-build libsdl2-dev libcriterion-dev
          version: 1.0

      - name: Install mold
        uses: rui314/setup-mold@v1

      - name: Install gcovr
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      - run: pip install gcovr==5.0

      - name: Run Criterion test suite
        run: |
          cmake -G Ninja -DCMAKE_C_COMPILER=gcc -DCMAKE_BUILD_TYPE=Debug -DCOVERAGE=1 -DTEST=1 .
          ninja -j 0 test
          readelf -p .comment yobemag_test

      - name: Run gcov
        run: |
          gcovr -r . --exclude=test/ --sonarqube > coverage.xml

      - name: Upload artifact (gcov report)
        uses: actions/upload-artifact@v3
        with:
          name: gcov-report
          path: ./coverage.xml

  sonarcloud:
    name: SonarCloud Analysis
    needs: [ unit-tests ]
    runs-on: ubuntu-22.04
    env:
      SONAR_SCANNER_VERSION: 4.7.0.2747
      SONAR_SERVER_URL: "https://sonarcloud.io"
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download artifact (gcov report)
        uses: actions/download-artifact@v3
        with:
          name: gcov-report

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Download and set up sonar-scanner
        env:
          SONAR_SCANNER_DOWNLOAD_URL: https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${{ env.SONAR_SCANNER_VERSION }}-linux.zip
        run: |
          mkdir -p $HOME/.sonar
          curl -sSLo $HOME/.sonar/sonar-scanner.zip ${{ env.SONAR_SCANNER_DOWNLOAD_URL }}
          unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
          echo "$HOME/.sonar/sonar-scanner-${{ env.SONAR_SCANNER_VERSION }}-linux/bin" >> $GITHUB_PATH

      - name: Download and set up build-wrapper
        env:
          BUILD_WRAPPER_DOWNLOAD_URL: ${{ env.SONAR_SERVER_URL }}/static/cpp/build-wrapper-linux-x86.zip
        run: |
          curl -sSLo $HOME/.sonar/build-wrapper-linux-x86.zip ${{ env.BUILD_WRAPPER_DOWNLOAD_URL }}
          unzip -o $HOME/.sonar/build-wrapper-linux-x86.zip -d $HOME/.sonar/
          echo "$HOME/.sonar/build-wrapper-linux-x86" >> $GITHUB_PATH

      - name: Install/Cache apt packages
        uses: awalsh128/cache-apt-pkgs-action@v1.1.2
        with:
          packages: libsdl2-dev gcc-multilib ninja-build libcriterion-dev
          version: 1.0

      - name: Run build-wrapper
        run: |
          mkdir build
          cmake -G Ninja . -B build
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} ninja -C build -j 0

      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            --define sonar.host.url="${{ env.SONAR_SERVER_URL }}" \
            --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}" \
            --define sonar.coverageReportPaths=coverage.xml
